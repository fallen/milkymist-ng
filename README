[> Nexys3 mini port of Milkymist-NG system-on-chip
------------------------------

This is the next-generation Milkymist(tm) system-on-chip design,
introducing two key innovations:
 * Built on the powerful Migen VLSI logic design system.
 * Increased system memory performance thanks to a new architecture
   (ASMI) containing a transaction-reordering and superscalar controller.

The Milkymist-NG SoC supports the Milkymist One board. Obtain yours at:
  http://milkymist.org

Note that the -NG version is still experimental work in progress. For the
production version of Milkymist SoC, visit:
  https://github.com/milkymist/milkymist

This GitHub repository contains a minimalistic port of the Milkymist-ng 
SoC.

For now it contains

- LatticeMico32 CPU (bus master)
- Timer (slave)
- on-chip ROM (slave) to hold the BIOS
- on-chip RAM (slave) to allow the BIOS to run
- Serial line (slave) to access the BIOS prompt

For now the Nexys3 port does not use the on-board PSRAM nor the PCM "flash" device.

For any question about the original (full featured) milkymist-ng SoC you can go ask
directly on IRC (#Milkymist on freenode) or on the mailing list ( devel [AT] lists.milkymist.org )

For any question regarding this particular port, please ask Yann Sionneau
either directly by e-mail (yann dot sionneau [at] gmail [do t] com) or on
IRC or on the mailing list.

[> Instructions (software)
--------------------------
1. Compile and install binutils. Take the latest version from GNU.
  mkdir build && cd build
  ../configure --target=lm32-elf
  make
  make install
  
2. Compile and install GCC 4.5. Take gcc-core and gcc-g++ from GNU.
  rm -rf libstdc++-v3
  mkdir build && cd build
  ../configure --target=lm32-elf --enable-languages="c,c++" --disable-libgcc --disable-libssp
  make
  make install

3. Obtain compiler-rt and set the CRTDIR environment variable to the root of 
   its source tree.
  svn co http://llvm.org/svn/llvm-project/compiler-rt/trunk compiler-rt
  export CRTDIR=/path_to/compiler-rt

4. Build and flash the BIOS (part of this source distribution).
  ./build.py --no-run (to generate csr.h) # Please install Migen first, see next section
  cd software/bios
  make

[> Instructions (gateware)
--------------------------
First, download and install Migen from:
  https://github.com/milkymist/migen

You will need Python >= 3.3

Once this is done, build the bitstream with:
  make
This will generate the build/soc.bit programming file.
Use:
  make load
to load it with djtgcfg.

The SoC expects a bootloader to be located in on-chip ROM at 0x00000000.

Enjoy!

[> Misc
-------
Code repository:
  https://github.com/milkymist/milkymist-ng

Send questions, comments and patches to devel [AT] lists.milkymist.org
We are also on IRC: #milkymist on the Freenode network.

Milkymist-NG is free software: you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation, version 3 of the License. This program is
distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

The authors grant the additional permissions that the code can be used in
conjunction with the LatticeMico32 CPU core from Lattice.

Unless otherwise noted, Milkymist-NG's source code is copyright (C)
2011-2013 Sebastien Bourdeauducq. Other authors retain ownership of their
contributions. If a submission can reasonably be considered independently
copyrightable, it's yours and I encourage you to claim it with
appropriate copyright notices. This submission then falls under the
"otherwise noted" category. All submissions must use a license compatible
with the GPL and the additional permissions above.
